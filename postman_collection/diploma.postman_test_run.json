{
	"id": "08d654d0-f427-4163-955d-2ba6354bd19d",
	"name": "diploma",
	"timestamp": "2025-06-03T00:29:52.135Z",
	"collection_id": "45219860-6ec3e80e-1a40-4943-ab42-5d396557d820",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 166,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-06-03T00:22:31.030Z",
	"totalFail": 32,
	"results": [
		{
			"id": "f400ddb8-e880-42fa-90ae-48a734464adf",
			"name": "create_first_user",
			"url": "http://127.0.0.1/api/users/",
			"time": 2112,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				2112
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "e156edd3-fbab-47b5-bfb9-c3e4a6623672",
			"name": "create_second_user",
			"url": "http://127.0.0.1/api/users/",
			"time": 36,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "b3e947bc-9969-45c4-9043-fc246472f59d",
			"name": "create_third_user",
			"url": "http://127.0.0.1/api/users/",
			"time": 659,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				659
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "d248c9bd-c516-47e3-ad3a-0f5957fc11e0",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1/api/auth/token/login/",
			"time": 1462,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1462
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "038fbb5a-85b6-4ee6-9cae-276dadfd5031",
			"name": "get_token_for_second_user",
			"url": "http://127.0.0.1/api/auth/token/login/",
			"time": 1314,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1314
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "9e259ae2-ced8-4273-93a0-a2ac52f5ceb7",
			"name": "user_registration_without_email",
			"url": "http://127.0.0.1/api/users/",
			"time": 28,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				28
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f2149673-3e02-45b2-a51d-b8653d95c193",
			"name": "user_registration_without_username",
			"url": "http://127.0.0.1/api/users/",
			"time": 39,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e2e2c9fb-6c6f-488b-901e-e9a972ff7030",
			"name": "user_registration_without_first_name",
			"url": "http://127.0.0.1/api/users/",
			"time": 29,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				29
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "eafd118e-7a17-4c08-903a-52f8ad0bd49c",
			"name": "user_registration_without_last_name",
			"url": "http://127.0.0.1/api/users/",
			"time": 37,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				37
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6be3c0bd-7e82-415a-bb0d-4c648d0655f7",
			"name": "user_registration_without_password",
			"url": "http://127.0.0.1/api/users/",
			"time": 49,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				49
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c5079741-4a36-44d9-a8f4-ca17b74c0901",
			"name": "user_registration_too_long_email",
			"url": "http://127.0.0.1/api/users/",
			"time": 30,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				30
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "168f1d93-2220-4ee9-9d37-536e05d7a9d8",
			"name": "user_registration_too_long_username",
			"url": "http://127.0.0.1/api/users/",
			"time": 49,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				49
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "3cae7155-3cc1-4322-b046-bfecc59f9be0",
			"name": "user_registration_too_long_first_name",
			"url": "http://127.0.0.1/api/users/",
			"time": 38,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b5ce85f8-6a36-413d-99b7-e98bf1ce36cf",
			"name": "user_registration_too_long_last_name",
			"url": "http://127.0.0.1/api/users/",
			"time": 48,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				48
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a3e98e7e-fcda-48a8-86fd-d63229024ed1",
			"name": "user_registration_with_invalid_username",
			"url": "http://127.0.0.1/api/users/",
			"time": 27,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				27
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "92d392f5-cd6a-42ce-83c3-bb1246447cc8",
			"name": "user_registration_email_in_use",
			"url": "http://127.0.0.1/api/users/",
			"time": 34,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				34
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6ed5ddb6-f690-4d07-b112-d6990964276a",
			"name": "user_registration_username_in_use",
			"url": "http://127.0.0.1/api/users/",
			"time": 38,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b8a74cc6-f8d4-48b3-b319-0afc108a6885",
			"name": "get_token_username_and_email_mismatch",
			"url": "http://127.0.0.1/api/auth/token/login/",
			"time": 1495,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1495
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "db074e98-3cea-4223-bff3-b8795c467764",
			"name": "get_token_no_email",
			"url": "http://127.0.0.1/api/auth/token/login/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "871d20a4-8778-4908-9c4d-1f2168ff9bd5",
			"name": "get_token_no_password",
			"url": "http://127.0.0.1/api/auth/token/login/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "89ed6eb7-7ec6-4eba-ac61-ffc9f242550f",
			"name": "logout // User",
			"url": "http://127.0.0.1/api/auth/token/logout/",
			"time": 36,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "440e3a4b-f5f2-4283-9aae-501ced5d492b",
			"name": "get_token",
			"url": "http://127.0.0.1/api/auth/token/login/",
			"time": 980,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				980
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "c9686bd0-8ca5-44d0-a9b6-90ee7b14638e",
			"name": "get_user_list // No Auth",
			"url": "http://127.0.0.1/api/users/",
			"time": 66,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				66
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "1c2f0712-0fbd-40e1-a192-81867d8715d9",
			"name": "get_user_list// User",
			"url": "http://127.0.0.1/api/users/",
			"time": 48,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				48
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "3ccae363-5bec-4428-a415-3d9e1f2a29d2",
			"name": "get_user_list_with_limit_param // User",
			"url": "http://127.0.0.1/api/users/?limit=1",
			"time": 38,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
				}
			]
		},
		{
			"id": "9ac3f5ae-d11b-490c-9922-53356f8412f9",
			"name": "get_profile // No Auth",
			"url": "http://127.0.0.1/api/users/2/",
			"time": 44,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				44
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "f9d8d431-614c-4cae-ba9e-fd6c22ac69ec",
			"name": "get_profile // User",
			"url": "http://127.0.0.1/api/users/2/",
			"time": 36,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "32a7046a-5cc7-40fa-9276-97f5dcfebe00",
			"name": "users_me // User",
			"url": "http://127.0.0.1/api/users/me/",
			"time": 38,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `is_subscribed` в ответе должно иметь значение `false`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `is_subscribed` в ответе должно иметь значение `false`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `is_subscribed` в ответе должно иметь значение `false`": true
				}
			]
		},
		{
			"id": "8f41ebcb-aa7b-4a70-816a-74833946e3d0",
			"name": "set_avatar // User",
			"url": "http://127.0.0.1/api/users/me/avatar/",
			"time": 2688,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2688
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "ffb3a6f0-e03f-4207-8924-1c55beb9a3f4",
			"name": "check_avatar_is_set // User",
			"url": "http://127.0.0.1/api/users/me/",
			"time": 39,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно содержать ссылку на аватар": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно содержать ссылку на аватар": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно содержать ссылку на аватар": true
				}
			]
		},
		{
			"id": "61a9e16e-8d7d-4cf9-abe7-0288214f5dd9",
			"name": "reset_password // User",
			"url": "http://127.0.0.1/api/users/set_password/",
			"time": 68967,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				68967
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "8e462cc6-3ea3-43f1-91de-c7f75ceacbc2",
			"name": "get_token_with_new_password",
			"url": "http://127.0.0.1/api/auth/token/login/",
			"time": 896,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				896
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "256f60b2-5f4c-4a5e-b105-63d22bc5a933",
			"name": "roll_back_password // User",
			"url": "http://127.0.0.1/api/users/set_password/",
			"time": 67513,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				67513
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "6b4a62c6-8aaa-42a7-9929-d1290c701222",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1/api/auth/token/login/",
			"time": 1167,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1167
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "ffed7456-3380-431b-be60-2afb414fb290",
			"name": "users_me // No Auth",
			"url": "http://127.0.0.1/api/users/me/",
			"time": 22,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "29e37990-1c03-450f-a29b-5c5066f9cfb1",
			"name": "get_non_existing_profile // User",
			"url": "http://127.0.0.1/api/users/9876/",
			"time": 48,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				48
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "f40e0419-07fe-4c26-b853-2c0aa1461d1a",
			"name": "reset_password_wrong_password // User",
			"url": "http://127.0.0.1/api/users/set_password/",
			"time": 1520,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1520
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "0d71a77d-44ff-4a9f-8d88-845f139a725d",
			"name": "delete_avatar // No Auth",
			"url": "http://127.0.0.1/api/users/me/avatar/",
			"time": 6,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "4387ffc6-e71a-4275-a77d-282842b0251b",
			"name": "set_avatar // No Auth",
			"url": "http://127.0.0.1/api/users/me/avatar/",
			"time": 7,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "86efb2e2-f3a0-4ef3-9603-931b87c6aaac",
			"name": "set_avatar_empty_body // User",
			"url": "http://127.0.0.1/api/users/me/avatar/",
			"time": 31,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				31
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "35d5c5aa-e6cb-45c6-9a51-3220745f4af0",
			"name": "delete_avatar // User",
			"url": "http://127.0.0.1/api/users/me/avatar/",
			"time": 44,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				44
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "835e15db-a088-43eb-a0a9-9b917cbbf16c",
			"name": "check_avatar_is_deleted // User",
			"url": "http://127.0.0.1/api/users/me/",
			"time": 41,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно быть пустым": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно быть пустым": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				41
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно быть пустым": true
				}
			]
		},
		{
			"id": "f419e737-c964-498f-ad9f-cbb2ee4502af",
			"name": "get_ingredients_list // No Auth",
			"url": "http://127.0.0.1/api/ingredients/",
			"time": 1710,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1710
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "d4d3191c-7483-444c-80ee-48d0efae5d9b",
			"name": "get_ingredients_list // User",
			"url": "http://127.0.0.1/api/ingredients/",
			"time": 284,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				284
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "fe80e3f5-cbfb-453e-880e-565a73f5f9b6",
			"name": "get_ingredients_list_with_name_filter // User",
			"url": "http://127.0.0.1/api/ingredients/?name=а",
			"time": 155,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				155
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "bdc863e9-e15f-4e3d-8f62-3ab0a75caf48",
			"name": "get_ingredient // No Auth",
			"url": "http://127.0.0.1/api/ingredients/1/",
			"time": 28,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				28
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "8a19b223-22ae-4eaf-85b1-35764ba16c06",
			"name": "get_ingredient // User",
			"url": "http://127.0.0.1/api/ingredients/1/",
			"time": 43,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				43
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "6f80bc3a-cde1-4401-9140-fd6d1025bfcd",
			"name": "get_non_existing_ingredient // User",
			"url": "http://127.0.0.1/api/ingredients/9876/",
			"time": 48,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				48
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "64f1682e-46d9-4567-98f6-1a04063bb3a7",
			"name": "create_ingredient // User",
			"url": "http://127.0.0.1/api/ingredients/",
			"time": 46,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				46
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "330adaae-8721-4307-b872-821bb99398f4",
			"name": "put_ingredient // User",
			"url": "http://127.0.0.1/api/ingredients/1/",
			"time": 54,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				54
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "18a1532c-ee54-40b9-95fc-1214d82ffcae",
			"name": "patch_ingredient // User",
			"url": "http://127.0.0.1/api/ingredients/1/",
			"time": 45,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				45
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "83c328d2-cf9a-482c-9422-f14924ebf116",
			"name": "delete_ingredient // User",
			"url": "http://127.0.0.1/api/ingredients/1/",
			"time": 43,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				43
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "d59633c5-e075-4e4f-96a9-f3f452a99e82",
			"name": "create_first_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 273,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				273
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "1e930963-b40c-4853-a13d-0fd85fb51595",
			"name": "create_second_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 91,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "24e199ce-3b63-435d-a705-59bf624cb719",
			"name": "create_third_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 498,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				498
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "ad68d7a3-6b4c-43f3-a4d5-e7e496b5a659",
			"name": "create_fourth_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 136,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				136
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "d271c3ec-847c-4b16-a342-be4f64bed3b2",
			"name": "create_fifth_recipe // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 94,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "344d8f3a-4b65-4655-9f5b-92fd5b14a559",
			"name": "get_recipes_list // No Auth",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 290,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				290
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "a7a0f531-b379-4c92-9545-034a177ec534",
			"name": "get_recipes_list // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 549,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				549
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "db11cd5a-ee7c-4d28-9b42-355885061258",
			"name": "get_recipes_list_with_limit_param // User",
			"url": "http://127.0.0.1/api/recipes/?limit=2",
			"time": 168,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				168
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр `limit`": true
				}
			]
		},
		{
			"id": "73ca0ae1-1f38-40dc-b0d8-32d1d2e8ebe7",
			"name": "get_recipes_list_with_author_param // User",
			"url": "http://127.0.0.1/api/recipes/?author=2",
			"time": 166,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				166
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность фильтрации рецептов через параметр запроса `author`": true
				}
			]
		},
		{
			"id": "c50f3bae-2436-4f3c-adb1-74568853015c",
			"name": "get_recipe_detail // No Auth",
			"url": "http://127.0.0.1/api/recipes/20/",
			"time": 87,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				87
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "5f43056f-eae7-4b2c-8813-6558f06b52f7",
			"name": "get_recipe_detail // User",
			"url": "http://127.0.0.1/api/recipes/20/",
			"time": 186,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				186
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "151c6ef4-d8bf-463d-9795-07eff7306b3f",
			"name": "get_recipe_short_link // User",
			"url": "http://127.0.0.1/api/recipes/20/get-link/",
			"time": 546,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				546
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "01b5583a-35f4-41b1-b22d-d25cdf85eae2",
			"name": "get_recipe_short_link // No Auth",
			"url": "http://127.0.0.1/api/recipes/20/get-link/",
			"time": 383,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				383
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "77615b5b-27e7-4a51-8184-491b70769c06",
			"name": "update_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/20/",
			"time": 457,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				457
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "3b440c02-b677-4dbb-8c32-e24be38f87fb",
			"name": "create_recipe_without_ingredients // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 248,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				248
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "536c99dd-21b2-4c5c-ba67-511cf1106dd7",
			"name": "create_recipe_empty_ingredients_fields // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 100,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				100
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "106bbba5-5f6c-48df-b2b8-f7b6f9e89484",
			"name": "create_recipe_with_non_existing_ingredient // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 34,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				34
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "70aa48a3-0a34-4ca1-a24c-9c5eb81deaaf",
			"name": "create_recipe_with_ingredient_amount_less_than_one // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 49,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				49
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "7a037e06-9a07-4c3a-bf9b-88eed310e816",
			"name": "create_recipe_with_repetitive_ingredients // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 46,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				46
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "0f7303e6-e170-43df-8cb2-f2aac38adaa6",
			"name": "create_recipe_without_image_field // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 42,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				42
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c1c34420-6ed2-4a4b-905f-fd3f4741cee5",
			"name": "create_recipe_empty_image // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 39,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "18614396-ce66-4f43-97dc-8e5a4bc6384c",
			"name": "create_recipe_without_name_field // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 44,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				44
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "15cdaa99-9791-4f9f-be57-bafe76057b41",
			"name": "create_recipe_empty_name // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 34,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				34
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "baf0b0ca-c47a-4f2c-ad7f-01cc7d17bfd2",
			"name": "create_recipe_too_long_name // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 67,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				67
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "547d3a63-8c87-4044-badd-42caa419654e",
			"name": "create_recipe_without_text_field // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 213,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				213
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "adf5eadc-1e49-43aa-bd37-7e9c3704ec5c",
			"name": "create_recipe_empty_text // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 170,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				170
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5f71209d-af7b-47b6-bdf9-abbbd2098132",
			"name": "create_recipe_without_cooking_time_field // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 90,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				90
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "123b54b1-d09c-40e4-a689-8eda7dbadf12",
			"name": "create_recipe_empty_string_as_cooking_time // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 52,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				52
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "788744ee-dfcb-410d-bce3-3969bbd9e7d7",
			"name": "create_recipe_cooking_time_less_than_one // User",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 29,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				29
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "16d99b52-eb07-4bdb-846b-5d9507f55b03",
			"name": "create_recipe // No Auth",
			"url": "http://127.0.0.1/api/recipes/",
			"time": 13,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "43c0649f-bb72-4256-9108-93e7ded03c20",
			"name": "update_recipe_not_author // User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 44,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				44
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "ccae310b-c3ab-43f9-bb20-79d14e488013",
			"name": "update_recipe // No Auth",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 13,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "96c628ea-6e07-4e80-bd10-c2da92fe73c3",
			"name": "update_recipe_without_ingredients_field // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 55,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				55
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "55680bbd-75e9-4798-974e-b179f7723fed",
			"name": "update_recipe_empty_ingredients // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 55,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				55
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "eef892c8-9d70-474d-8994-210e9d4ae53b",
			"name": "update_recipe_with_non_existing_ingredient // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 60,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				60
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b909cccd-0307-4471-9288-b7a19b8da50b",
			"name": "update_recipe_with_ingredient_amount_less_than_one // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 67,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				67
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "3b43b9bf-8041-402d-a625-8e91e922e3fe",
			"name": "update_recipe_with_repetitive_ingredients // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 56,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				56
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "62ff4339-b732-426f-a21a-ebc0f1d99b16",
			"name": "update_recipe_empty_image  // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 113,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				113
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "84719b88-e3af-4cc5-9efc-b10e70c0f956",
			"name": "update_recipe_empty_name  // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 44,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				44
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "3c2542bc-d2f2-4b3d-9e30-a79fd95af89d",
			"name": "update_recipe_too_long_name  // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 47,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				47
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b5be1275-06e1-48a0-9384-18406d221f35",
			"name": "update_recipe_empty_text  // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 45,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				45
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "06a5ab23-3e59-41f3-94d8-4abff20722ee",
			"name": "update_recipe_empty_string_as_cooking_time  // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 59,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				59
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9ee1f00f-bcb0-4ce7-afe0-50f1e1dd3e60",
			"name": "update_recipe_empty_cooking_time_less_than_one  // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 49,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				49
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "25855c5b-38b9-4e6d-8f38-3f09c5dfb4a0",
			"name": "update_none_existing_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/9876/",
			"time": 35,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				35
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "f10b5e2f-46a0-4796-8cda-115c50f5d308",
			"name": "create_subscription // User",
			"url": "http://127.0.0.1/api/users/4/subscribe/",
			"time": 52,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				52
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "77001fb5-67bb-436e-9c6f-6a1d38964403",
			"name": "create_subscription_with_recipes_limit_param // User",
			"url": "http://127.0.0.1/api/users/3/subscribe/?recipes_limit=2",
			"time": 44,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				44
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "2308631b-e6e4-468c-a8f9-1edc43705534",
			"name": "get_subscription_list // User",
			"url": "http://127.0.0.1/api/users/subscriptions/",
			"time": 68,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				68
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "5ce03e0d-594c-4b71-8fe9-6db635ad137c",
			"name": "get_subscription_list_with_limit_param // User",
			"url": "http://127.0.0.1/api/users/subscriptions/?limit=1",
			"time": 47,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				47
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": true
				}
			]
		},
		{
			"id": "8655e2e8-cdce-43a9-85f8-3a000c77a192",
			"name": "get_subscription_list_with_recipes_limit_param // User",
			"url": "http://127.0.0.1/api/users/subscriptions/?recipes_limit=2",
			"time": 259,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				259
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "a2eaabc4-7369-4018-af6d-6efb00c53ba3",
			"name": "create_subscription // No Auth",
			"url": "http://127.0.0.1/api/users/4/subscribe/",
			"time": 35,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				35
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "86b14cf6-d591-42ad-8ab2-f23c7e289080",
			"name": "create_duplicated_subscription // User",
			"url": "http://127.0.0.1/api/users/4/subscribe/",
			"time": 119,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				119
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bd4bc070-442e-4342-be98-45c540dbe6ed",
			"name": "create_self_subscription // User",
			"url": "http://127.0.0.1/api/users/2/subscribe/",
			"time": 35,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				35
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9e9d7ef9-993e-4e5b-af69-b9e0219a5c19",
			"name": "create_subscription_to_non_existing_author // User",
			"url": "http://127.0.0.1/api/users/9876/subscribe/",
			"time": 30,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				30
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "9947e5d5-1e59-4e93-9250-6bcee347b8ca",
			"name": "add_to_shopping_cart // User",
			"url": "http://127.0.0.1/api/recipes/20/shopping_cart/",
			"time": 125,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				125
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "49f4a584-9811-4df5-a94b-210223c7dbc8",
			"name": "download_shopping_cart // User",
			"url": "http://127.0.0.1/api/recipes/download_shopping_cart/",
			"time": 50,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				50
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true
				}
			]
		},
		{
			"id": "7e6562ce-ad40-4fb9-9880-c2c5076737f5",
			"name": "add_to_shopping_cart // No Auth",
			"url": "http://127.0.0.1/api/recipes/20/shopping_cart/",
			"time": 23,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "16438884-51e7-4d12-8ebb-53c2ae4d3998",
			"name": "add_again_to_shopping_cart // User",
			"url": "http://127.0.0.1/api/recipes/20/shopping_cart/",
			"time": 37,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				37
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "86c1bd62-f97a-43d8-aad9-71c57f9f5c7b",
			"name": "add_non_existing_recipe_to_shopping_cart // User",
			"url": "http://127.0.0.1/api/recipes/9876/shopping_cart/",
			"time": 46,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				46
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "b440071e-db83-4928-a717-3e70b1906dc0",
			"name": "add_to_favorite // User",
			"url": "http://127.0.0.1/api/recipes/20/favorite/",
			"time": 75,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				75
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "5f12afdb-e7a3-4d39-acfc-90f58d77491d",
			"name": "add_to_favorite // No Auth",
			"url": "http://127.0.0.1/api/recipes/20/favorite/",
			"time": 35,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				35
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "82bf9c3f-0e5d-4945-b153-fc0fcdc34340",
			"name": "add_again_to_favorite // User",
			"url": "http://127.0.0.1/api/recipes/20/favorite/",
			"time": 79,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				79
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b734e98f-f2f1-43c4-965b-3cd34fb1a72e",
			"name": "add_non_existing_recipe_to_favorite // User",
			"url": "http://127.0.0.1/api/recipes/9876/favorite/",
			"time": 109,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				109
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "34d3c52f-fdd6-4e14-9cf5-90a3201bcfcc",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // User",
			"url": "http://127.0.0.1/api/recipes/?is_in_shopping_cart=1",
			"time": 111,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				111
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": true
				}
			]
		},
		{
			"id": "57ffdd6a-fe49-4317-a560-e80215f8bfaf",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // No Auth",
			"url": "http://127.0.0.1/api/recipes/?is_in_shopping_cart=1",
			"time": 134,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				134
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "a2c3a6ca-a1c2-4c5c-b9c9-d5fc6929d892",
			"name": "get_recipes_list_with_is_favorited_param // User",
			"url": "http://127.0.0.1/api/recipes/?is_favorited=1",
			"time": 74,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				74
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": true
				}
			]
		},
		{
			"id": "efff21e0-3298-4bde-9028-baf2752577d2",
			"name": "get_recipes_list_with_is_favorited_param // No Auth",
			"url": "http://127.0.0.1/api/recipes/?is_favorited=1",
			"time": 91,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "c65c3eb5-679f-4ca9-bc36-f5b97d859ff5",
			"name": "delete_subscription // No Auth",
			"url": "http://127.0.0.1/api/users/4/subscribe/",
			"time": 10,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "1343ceb2-86fa-400a-bdb9-96e045f96e06",
			"name": "delete_non_existing_subscription // Second User",
			"url": "http://127.0.0.1/api/users/4/subscribe/",
			"time": 37,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				37
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "1eddf54b-4fb0-45e3-9614-fecf1151b901",
			"name": "delete_subscription_with_non_existing_author_in_url // Second User",
			"url": "http://127.0.0.1/api/users/9876/subscribe/",
			"time": 38,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "d265afe8-775f-404a-908d-6306641f76fd",
			"name": "delete_first_subscription // User",
			"url": "http://127.0.0.1/api/users/4/subscribe/",
			"time": 65034,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				65034
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "fa8d47a4-91d0-430b-a00e-9bae99efb83f",
			"name": "delete_second_subscription // User",
			"url": "http://127.0.0.1/api/users/3/subscribe/",
			"time": 65130,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				65130
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "fbe670e8-d21d-4640-a714-55cec1d7d7ab",
			"name": "remove_from_shopping_cart // No Auth",
			"url": "http://127.0.0.1/api/recipes/20/shopping_cart/",
			"time": 11,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "8e24edd6-8869-4ec2-819f-23acf38f9035",
			"name": "remove_not_added_from_shopping_cart // Second User",
			"url": "http://127.0.0.1/api/recipes/20/shopping_cart/",
			"time": 37,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				37
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "62d593b9-dcf5-430d-9941-59910a61739b",
			"name": "remove_non_existing_recipe_from_shopping_cart // Second User",
			"url": "http://127.0.0.1/api/recipes/9876/shopping_cart/",
			"time": 31,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				31
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "530b070e-6338-4663-a3bd-700abb624a4d",
			"name": "remove_from_shopping_cart // User",
			"url": "http://127.0.0.1/api/recipes/20/shopping_cart/",
			"time": 65153,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				65153
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "7e13fa81-4ad5-4cbf-a230-bf85761e2364",
			"name": "remove_from_favorite // No Auth",
			"url": "http://127.0.0.1/api/recipes/20/favorite/",
			"time": 274,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				274
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "e6901d45-1d56-4fee-ad83-c2a613e122b1",
			"name": "remove_not_added_from_favorite // Second User",
			"url": "http://127.0.0.1/api/recipes/20/favorite/",
			"time": 89,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				89
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "638cfcd1-70bb-4b3c-86ce-e80fd76e7ef6",
			"name": "remove_non_existing_recipe_from_favorite // Second User",
			"url": "http://127.0.0.1/api/recipes/9876/favorite/",
			"time": 36,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "2d3625b2-c841-417b-bc07-636ba929cf7c",
			"name": "remove_from_favorite // User",
			"url": "http://127.0.0.1/api/recipes/20/favorite/",
			"time": 65134,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				65134
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "d418a9f0-ab44-43c9-aa37-e4c3394f268d",
			"name": "delete_recipe // No Auth",
			"url": "http://127.0.0.1/api/recipes/24/",
			"time": 13,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "0c5f01be-3bc0-438d-a1ba-c88a8bc0963d",
			"name": "delete_recipe_not_by_author // Second User",
			"url": "http://127.0.0.1/api/recipes/24/",
			"time": 47,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				47
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "9ebfb89a-3bf1-4bb1-8cfa-4fc96ec4ec4c",
			"name": "delete_non_existing_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/9876/",
			"time": 150,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				150
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "578d129c-057c-4968-b3a1-de33b4d536f1",
			"name": "delete_first_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/20/",
			"time": 156,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				156
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "d8dba8df-996f-4e31-af0e-d1093a91795c",
			"name": "delete_second_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/21/",
			"time": 119,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				119
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "c21d0004-106f-45a0-b19e-d9cf2aa6d9bf",
			"name": "delete_third_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/22/",
			"time": 61,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				61
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "4feee15f-055e-43be-858b-887209a53476",
			"name": "delete_fourth_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/23/",
			"time": 73,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				73
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "5c59031b-3016-4432-9b81-0404e0b74422",
			"name": "delete_fifth_recipe // Second User",
			"url": "http://127.0.0.1/api/recipes/24/",
			"time": 74,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				74
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 423599,
	"collection": {
		"requests": [
			{
				"id": "f400ddb8-e880-42fa-90ae-48a734464adf",
				"method": "POST"
			},
			{
				"id": "e156edd3-fbab-47b5-bfb9-c3e4a6623672",
				"method": "POST"
			},
			{
				"id": "b3e947bc-9969-45c4-9043-fc246472f59d",
				"method": "POST"
			},
			{
				"id": "d248c9bd-c516-47e3-ad3a-0f5957fc11e0",
				"method": "POST"
			},
			{
				"id": "038fbb5a-85b6-4ee6-9cae-276dadfd5031",
				"method": "POST"
			},
			{
				"id": "9e259ae2-ced8-4273-93a0-a2ac52f5ceb7",
				"method": "POST"
			},
			{
				"id": "f2149673-3e02-45b2-a51d-b8653d95c193",
				"method": "POST"
			},
			{
				"id": "e2e2c9fb-6c6f-488b-901e-e9a972ff7030",
				"method": "POST"
			},
			{
				"id": "eafd118e-7a17-4c08-903a-52f8ad0bd49c",
				"method": "POST"
			},
			{
				"id": "6be3c0bd-7e82-415a-bb0d-4c648d0655f7",
				"method": "POST"
			},
			{
				"id": "c5079741-4a36-44d9-a8f4-ca17b74c0901",
				"method": "POST"
			},
			{
				"id": "168f1d93-2220-4ee9-9d37-536e05d7a9d8",
				"method": "POST"
			},
			{
				"id": "3cae7155-3cc1-4322-b046-bfecc59f9be0",
				"method": "POST"
			},
			{
				"id": "b5ce85f8-6a36-413d-99b7-e98bf1ce36cf",
				"method": "POST"
			},
			{
				"id": "a3e98e7e-fcda-48a8-86fd-d63229024ed1",
				"method": "POST"
			},
			{
				"id": "92d392f5-cd6a-42ce-83c3-bb1246447cc8",
				"method": "POST"
			},
			{
				"id": "6ed5ddb6-f690-4d07-b112-d6990964276a",
				"method": "POST"
			},
			{
				"id": "b8a74cc6-f8d4-48b3-b319-0afc108a6885",
				"method": "POST"
			},
			{
				"id": "db074e98-3cea-4223-bff3-b8795c467764",
				"method": "POST"
			},
			{
				"id": "871d20a4-8778-4908-9c4d-1f2168ff9bd5",
				"method": "POST"
			},
			{
				"id": "89ed6eb7-7ec6-4eba-ac61-ffc9f242550f",
				"method": "POST"
			},
			{
				"id": "440e3a4b-f5f2-4283-9aae-501ced5d492b",
				"method": "POST"
			},
			{
				"id": "c9686bd0-8ca5-44d0-a9b6-90ee7b14638e",
				"method": "GET"
			},
			{
				"id": "1c2f0712-0fbd-40e1-a192-81867d8715d9",
				"method": "GET"
			},
			{
				"id": "3ccae363-5bec-4428-a415-3d9e1f2a29d2",
				"method": "GET"
			},
			{
				"id": "9ac3f5ae-d11b-490c-9922-53356f8412f9",
				"method": "GET"
			},
			{
				"id": "f9d8d431-614c-4cae-ba9e-fd6c22ac69ec",
				"method": "GET"
			},
			{
				"id": "32a7046a-5cc7-40fa-9276-97f5dcfebe00",
				"method": "GET"
			},
			{
				"id": "8f41ebcb-aa7b-4a70-816a-74833946e3d0",
				"method": "PUT"
			},
			{
				"id": "ffb3a6f0-e03f-4207-8924-1c55beb9a3f4",
				"method": "GET"
			},
			{
				"id": "61a9e16e-8d7d-4cf9-abe7-0288214f5dd9",
				"method": "POST"
			},
			{
				"id": "8e462cc6-3ea3-43f1-91de-c7f75ceacbc2",
				"method": "POST"
			},
			{
				"id": "256f60b2-5f4c-4a5e-b105-63d22bc5a933",
				"method": "POST"
			},
			{
				"id": "6b4a62c6-8aaa-42a7-9929-d1290c701222",
				"method": "POST"
			},
			{
				"id": "ffed7456-3380-431b-be60-2afb414fb290",
				"method": "GET"
			},
			{
				"id": "29e37990-1c03-450f-a29b-5c5066f9cfb1",
				"method": "GET"
			},
			{
				"id": "f40e0419-07fe-4c26-b853-2c0aa1461d1a",
				"method": "POST"
			},
			{
				"id": "0d71a77d-44ff-4a9f-8d88-845f139a725d",
				"method": "DELETE"
			},
			{
				"id": "4387ffc6-e71a-4275-a77d-282842b0251b",
				"method": "PUT"
			},
			{
				"id": "86efb2e2-f3a0-4ef3-9603-931b87c6aaac",
				"method": "PUT"
			},
			{
				"id": "35d5c5aa-e6cb-45c6-9a51-3220745f4af0",
				"method": "DELETE"
			},
			{
				"id": "835e15db-a088-43eb-a0a9-9b917cbbf16c",
				"method": "GET"
			},
			{
				"id": "f419e737-c964-498f-ad9f-cbb2ee4502af",
				"method": "GET"
			},
			{
				"id": "d4d3191c-7483-444c-80ee-48d0efae5d9b",
				"method": "GET"
			},
			{
				"id": "fe80e3f5-cbfb-453e-880e-565a73f5f9b6",
				"method": "GET"
			},
			{
				"id": "bdc863e9-e15f-4e3d-8f62-3ab0a75caf48",
				"method": "GET"
			},
			{
				"id": "8a19b223-22ae-4eaf-85b1-35764ba16c06",
				"method": "GET"
			},
			{
				"id": "6f80bc3a-cde1-4401-9140-fd6d1025bfcd",
				"method": "GET"
			},
			{
				"id": "64f1682e-46d9-4567-98f6-1a04063bb3a7",
				"method": "POST"
			},
			{
				"id": "330adaae-8721-4307-b872-821bb99398f4",
				"method": "PUT"
			},
			{
				"id": "18a1532c-ee54-40b9-95fc-1214d82ffcae",
				"method": "PATCH"
			},
			{
				"id": "83c328d2-cf9a-482c-9422-f14924ebf116",
				"method": "DELETE"
			},
			{
				"id": "d59633c5-e075-4e4f-96a9-f3f452a99e82",
				"method": "POST"
			},
			{
				"id": "1e930963-b40c-4853-a13d-0fd85fb51595",
				"method": "POST"
			},
			{
				"id": "24e199ce-3b63-435d-a705-59bf624cb719",
				"method": "POST"
			},
			{
				"id": "ad68d7a3-6b4c-43f3-a4d5-e7e496b5a659",
				"method": "POST"
			},
			{
				"id": "d271c3ec-847c-4b16-a342-be4f64bed3b2",
				"method": "POST"
			},
			{
				"id": "344d8f3a-4b65-4655-9f5b-92fd5b14a559",
				"method": "GET"
			},
			{
				"id": "a7a0f531-b379-4c92-9545-034a177ec534",
				"method": "GET"
			},
			{
				"id": "db11cd5a-ee7c-4d28-9b42-355885061258",
				"method": "GET"
			},
			{
				"id": "73ca0ae1-1f38-40dc-b0d8-32d1d2e8ebe7",
				"method": "GET"
			},
			{
				"id": "c50f3bae-2436-4f3c-adb1-74568853015c",
				"method": "GET"
			},
			{
				"id": "5f43056f-eae7-4b2c-8813-6558f06b52f7",
				"method": "GET"
			},
			{
				"id": "151c6ef4-d8bf-463d-9795-07eff7306b3f",
				"method": "GET"
			},
			{
				"id": "01b5583a-35f4-41b1-b22d-d25cdf85eae2",
				"method": "GET"
			},
			{
				"id": "77615b5b-27e7-4a51-8184-491b70769c06",
				"method": "PATCH"
			},
			{
				"id": "3b440c02-b677-4dbb-8c32-e24be38f87fb",
				"method": "POST"
			},
			{
				"id": "536c99dd-21b2-4c5c-ba67-511cf1106dd7",
				"method": "POST"
			},
			{
				"id": "106bbba5-5f6c-48df-b2b8-f7b6f9e89484",
				"method": "POST"
			},
			{
				"id": "70aa48a3-0a34-4ca1-a24c-9c5eb81deaaf",
				"method": "POST"
			},
			{
				"id": "7a037e06-9a07-4c3a-bf9b-88eed310e816",
				"method": "POST"
			},
			{
				"id": "0f7303e6-e170-43df-8cb2-f2aac38adaa6",
				"method": "POST"
			},
			{
				"id": "c1c34420-6ed2-4a4b-905f-fd3f4741cee5",
				"method": "POST"
			},
			{
				"id": "18614396-ce66-4f43-97dc-8e5a4bc6384c",
				"method": "POST"
			},
			{
				"id": "15cdaa99-9791-4f9f-be57-bafe76057b41",
				"method": "POST"
			},
			{
				"id": "baf0b0ca-c47a-4f2c-ad7f-01cc7d17bfd2",
				"method": "POST"
			},
			{
				"id": "547d3a63-8c87-4044-badd-42caa419654e",
				"method": "POST"
			},
			{
				"id": "adf5eadc-1e49-43aa-bd37-7e9c3704ec5c",
				"method": "POST"
			},
			{
				"id": "5f71209d-af7b-47b6-bdf9-abbbd2098132",
				"method": "POST"
			},
			{
				"id": "123b54b1-d09c-40e4-a689-8eda7dbadf12",
				"method": "POST"
			},
			{
				"id": "788744ee-dfcb-410d-bce3-3969bbd9e7d7",
				"method": "POST"
			},
			{
				"id": "16d99b52-eb07-4bdb-846b-5d9507f55b03",
				"method": "POST"
			},
			{
				"id": "43c0649f-bb72-4256-9108-93e7ded03c20",
				"method": "PATCH"
			},
			{
				"id": "ccae310b-c3ab-43f9-bb20-79d14e488013",
				"method": "PATCH"
			},
			{
				"id": "96c628ea-6e07-4e80-bd10-c2da92fe73c3",
				"method": "PATCH"
			},
			{
				"id": "55680bbd-75e9-4798-974e-b179f7723fed",
				"method": "PATCH"
			},
			{
				"id": "eef892c8-9d70-474d-8994-210e9d4ae53b",
				"method": "PATCH"
			},
			{
				"id": "b909cccd-0307-4471-9288-b7a19b8da50b",
				"method": "PATCH"
			},
			{
				"id": "3b43b9bf-8041-402d-a625-8e91e922e3fe",
				"method": "PATCH"
			},
			{
				"id": "62ff4339-b732-426f-a21a-ebc0f1d99b16",
				"method": "PATCH"
			},
			{
				"id": "84719b88-e3af-4cc5-9efc-b10e70c0f956",
				"method": "PATCH"
			},
			{
				"id": "3c2542bc-d2f2-4b3d-9e30-a79fd95af89d",
				"method": "PATCH"
			},
			{
				"id": "b5be1275-06e1-48a0-9384-18406d221f35",
				"method": "PATCH"
			},
			{
				"id": "06a5ab23-3e59-41f3-94d8-4abff20722ee",
				"method": "PATCH"
			},
			{
				"id": "9ee1f00f-bcb0-4ce7-afe0-50f1e1dd3e60",
				"method": "PATCH"
			},
			{
				"id": "25855c5b-38b9-4e6d-8f38-3f09c5dfb4a0",
				"method": "PATCH"
			},
			{
				"id": "f10b5e2f-46a0-4796-8cda-115c50f5d308",
				"method": "POST"
			},
			{
				"id": "77001fb5-67bb-436e-9c6f-6a1d38964403",
				"method": "POST"
			},
			{
				"id": "2308631b-e6e4-468c-a8f9-1edc43705534",
				"method": "GET"
			},
			{
				"id": "5ce03e0d-594c-4b71-8fe9-6db635ad137c",
				"method": "GET"
			},
			{
				"id": "8655e2e8-cdce-43a9-85f8-3a000c77a192",
				"method": "GET"
			},
			{
				"id": "a2eaabc4-7369-4018-af6d-6efb00c53ba3",
				"method": "POST"
			},
			{
				"id": "86b14cf6-d591-42ad-8ab2-f23c7e289080",
				"method": "POST"
			},
			{
				"id": "bd4bc070-442e-4342-be98-45c540dbe6ed",
				"method": "POST"
			},
			{
				"id": "9e9d7ef9-993e-4e5b-af69-b9e0219a5c19",
				"method": "POST"
			},
			{
				"id": "9947e5d5-1e59-4e93-9250-6bcee347b8ca",
				"method": "POST"
			},
			{
				"id": "49f4a584-9811-4df5-a94b-210223c7dbc8",
				"method": "GET"
			},
			{
				"id": "7e6562ce-ad40-4fb9-9880-c2c5076737f5",
				"method": "POST"
			},
			{
				"id": "16438884-51e7-4d12-8ebb-53c2ae4d3998",
				"method": "POST"
			},
			{
				"id": "86c1bd62-f97a-43d8-aad9-71c57f9f5c7b",
				"method": "POST"
			},
			{
				"id": "b440071e-db83-4928-a717-3e70b1906dc0",
				"method": "POST"
			},
			{
				"id": "5f12afdb-e7a3-4d39-acfc-90f58d77491d",
				"method": "POST"
			},
			{
				"id": "82bf9c3f-0e5d-4945-b153-fc0fcdc34340",
				"method": "POST"
			},
			{
				"id": "b734e98f-f2f1-43c4-965b-3cd34fb1a72e",
				"method": "POST"
			},
			{
				"id": "34d3c52f-fdd6-4e14-9cf5-90a3201bcfcc",
				"method": "GET"
			},
			{
				"id": "57ffdd6a-fe49-4317-a560-e80215f8bfaf",
				"method": "GET"
			},
			{
				"id": "a2c3a6ca-a1c2-4c5c-b9c9-d5fc6929d892",
				"method": "GET"
			},
			{
				"id": "efff21e0-3298-4bde-9028-baf2752577d2",
				"method": "GET"
			},
			{
				"id": "c65c3eb5-679f-4ca9-bc36-f5b97d859ff5",
				"method": "DELETE"
			},
			{
				"id": "1343ceb2-86fa-400a-bdb9-96e045f96e06",
				"method": "DELETE"
			},
			{
				"id": "1eddf54b-4fb0-45e3-9614-fecf1151b901",
				"method": "DELETE"
			},
			{
				"id": "d265afe8-775f-404a-908d-6306641f76fd",
				"method": "DELETE"
			},
			{
				"id": "fa8d47a4-91d0-430b-a00e-9bae99efb83f",
				"method": "DELETE"
			},
			{
				"id": "fbe670e8-d21d-4640-a714-55cec1d7d7ab",
				"method": "DELETE"
			},
			{
				"id": "8e24edd6-8869-4ec2-819f-23acf38f9035",
				"method": "DELETE"
			},
			{
				"id": "62d593b9-dcf5-430d-9941-59910a61739b",
				"method": "DELETE"
			},
			{
				"id": "530b070e-6338-4663-a3bd-700abb624a4d",
				"method": "DELETE"
			},
			{
				"id": "7e13fa81-4ad5-4cbf-a230-bf85761e2364",
				"method": "DELETE"
			},
			{
				"id": "e6901d45-1d56-4fee-ad83-c2a613e122b1",
				"method": "DELETE"
			},
			{
				"id": "638cfcd1-70bb-4b3c-86ce-e80fd76e7ef6",
				"method": "DELETE"
			},
			{
				"id": "2d3625b2-c841-417b-bc07-636ba929cf7c",
				"method": "DELETE"
			},
			{
				"id": "d418a9f0-ab44-43c9-aa37-e4c3394f268d",
				"method": "DELETE"
			},
			{
				"id": "0c5f01be-3bc0-438d-a1ba-c88a8bc0963d",
				"method": "DELETE"
			},
			{
				"id": "9ebfb89a-3bf1-4bb1-8cfa-4fc96ec4ec4c",
				"method": "DELETE"
			},
			{
				"id": "578d129c-057c-4968-b3a1-de33b4d536f1",
				"method": "DELETE"
			},
			{
				"id": "d8dba8df-996f-4e31-af0e-d1093a91795c",
				"method": "DELETE"
			},
			{
				"id": "c21d0004-106f-45a0-b19e-d9cf2aa6d9bf",
				"method": "DELETE"
			},
			{
				"id": "4feee15f-055e-43be-858b-887209a53476",
				"method": "DELETE"
			},
			{
				"id": "5c59031b-3016-4432-9b81-0404e0b74422",
				"method": "DELETE"
			}
		]
	}
}