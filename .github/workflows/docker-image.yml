name: Build, Push and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/foodgram

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Создаем .env файл в корне проекта (где его ищет docker compose)
      - name: Create .env file
        run: |
          cat <<EOF > ./.env
          DB_ENGINE=${{ secrets.DB_ENGINE }}
          DB_NAME=${{ secrets.DB_NAME }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:backend-${{ github.sha }}

      - name: Start services for testing (only backend + db)
        run: |
          docker compose -f ./infra/docker-compose.yml up -d backend db
          docker compose -f ./infra/docker-compose.yml exec -T backend sh -c 'while ! curl -s http://localhost:8000; do sleep 1; done'

      - name: Load ingredients
        run: |
          docker compose -f ./infra/docker-compose.yml exec -T backend python manage.py load_ingredients /app/data/ingredients.csv

      - name: Run API tests
        uses: matt-ball/newman-action@master
        with:
          collection: ./infra/postman_collection/foodgram.postman_collection.json
          environment: ./infra/postman_collection/test.postman_environment.json
